// Code generated by protoc-gen-go. DO NOT EDIT.
// source: karad.proto

package src

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SingleTimesJobRequest struct {
	SpotId               string   `protobuf:"bytes,1,opt,name=spot_id,json=spotId,proto3" json:"spot_id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleTimesJobRequest) Reset()         { *m = SingleTimesJobRequest{} }
func (m *SingleTimesJobRequest) String() string { return proto.CompactTextString(m) }
func (*SingleTimesJobRequest) ProtoMessage()    {}
func (*SingleTimesJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dcd8f1f13bee2b9, []int{0}
}

func (m *SingleTimesJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleTimesJobRequest.Unmarshal(m, b)
}
func (m *SingleTimesJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleTimesJobRequest.Marshal(b, m, deterministic)
}
func (m *SingleTimesJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleTimesJobRequest.Merge(m, src)
}
func (m *SingleTimesJobRequest) XXX_Size() int {
	return xxx_messageInfo_SingleTimesJobRequest.Size(m)
}
func (m *SingleTimesJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleTimesJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SingleTimesJobRequest proto.InternalMessageInfo

func (m *SingleTimesJobRequest) GetSpotId() string {
	if m != nil {
		return m.SpotId
	}
	return ""
}

func (m *SingleTimesJobRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type SingleTimesJobResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleTimesJobResponse) Reset()         { *m = SingleTimesJobResponse{} }
func (m *SingleTimesJobResponse) String() string { return proto.CompactTextString(m) }
func (*SingleTimesJobResponse) ProtoMessage()    {}
func (*SingleTimesJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dcd8f1f13bee2b9, []int{1}
}

func (m *SingleTimesJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleTimesJobResponse.Unmarshal(m, b)
}
func (m *SingleTimesJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleTimesJobResponse.Marshal(b, m, deterministic)
}
func (m *SingleTimesJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleTimesJobResponse.Merge(m, src)
}
func (m *SingleTimesJobResponse) XXX_Size() int {
	return xxx_messageInfo_SingleTimesJobResponse.Size(m)
}
func (m *SingleTimesJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleTimesJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SingleTimesJobResponse proto.InternalMessageInfo

func (m *SingleTimesJobResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *SingleTimesJobResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type MultipleTimesJobRequest struct {
	SpotId               string   `protobuf:"bytes,1,opt,name=spot_id,json=spotId,proto3" json:"spot_id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Limit                int32    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultipleTimesJobRequest) Reset()         { *m = MultipleTimesJobRequest{} }
func (m *MultipleTimesJobRequest) String() string { return proto.CompactTextString(m) }
func (*MultipleTimesJobRequest) ProtoMessage()    {}
func (*MultipleTimesJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dcd8f1f13bee2b9, []int{2}
}

func (m *MultipleTimesJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultipleTimesJobRequest.Unmarshal(m, b)
}
func (m *MultipleTimesJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultipleTimesJobRequest.Marshal(b, m, deterministic)
}
func (m *MultipleTimesJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultipleTimesJobRequest.Merge(m, src)
}
func (m *MultipleTimesJobRequest) XXX_Size() int {
	return xxx_messageInfo_MultipleTimesJobRequest.Size(m)
}
func (m *MultipleTimesJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultipleTimesJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultipleTimesJobRequest proto.InternalMessageInfo

func (m *MultipleTimesJobRequest) GetSpotId() string {
	if m != nil {
		return m.SpotId
	}
	return ""
}

func (m *MultipleTimesJobRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MultipleTimesJobRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type MultipleTimesJobResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultipleTimesJobResponse) Reset()         { *m = MultipleTimesJobResponse{} }
func (m *MultipleTimesJobResponse) String() string { return proto.CompactTextString(m) }
func (*MultipleTimesJobResponse) ProtoMessage()    {}
func (*MultipleTimesJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dcd8f1f13bee2b9, []int{3}
}

func (m *MultipleTimesJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultipleTimesJobResponse.Unmarshal(m, b)
}
func (m *MultipleTimesJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultipleTimesJobResponse.Marshal(b, m, deterministic)
}
func (m *MultipleTimesJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultipleTimesJobResponse.Merge(m, src)
}
func (m *MultipleTimesJobResponse) XXX_Size() int {
	return xxx_messageInfo_MultipleTimesJobResponse.Size(m)
}
func (m *MultipleTimesJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MultipleTimesJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MultipleTimesJobResponse proto.InternalMessageInfo

func (m *MultipleTimesJobResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *MultipleTimesJobResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*SingleTimesJobRequest)(nil), "src.SingleTimesJobRequest")
	proto.RegisterType((*SingleTimesJobResponse)(nil), "src.SingleTimesJobResponse")
	proto.RegisterType((*MultipleTimesJobRequest)(nil), "src.MultipleTimesJobRequest")
	proto.RegisterType((*MultipleTimesJobResponse)(nil), "src.MultipleTimesJobResponse")
}

func init() { proto.RegisterFile("karad.proto", fileDescriptor_8dcd8f1f13bee2b9) }

var fileDescriptor_8dcd8f1f13bee2b9 = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0x45, 0x09, 0x51, 0x53, 0x78, 0x48, 0xa8, 0x7a, 0x82, 0xd6, 0x0a, 0x20, 0x55, 0x9e, 0x3a,
	0x65, 0x80, 0x3f, 0x60, 0x23, 0xc0, 0x40, 0xca, 0xc4, 0x82, 0x9c, 0xe4, 0xa9, 0xb2, 0x9a, 0xd4,
	0xc6, 0xcf, 0x41, 0xe2, 0x9f, 0xf8, 0x48, 0x54, 0xb7, 0x1d, 0x28, 0xed, 0x42, 0x37, 0x5f, 0x5f,
	0xf9, 0xe8, 0xe8, 0x1a, 0xce, 0xe6, 0xca, 0xa9, 0x3a, 0xb3, 0xce, 0x78, 0x83, 0x31, 0xbb, 0x4a,
	0xde, 0xc3, 0xe5, 0x54, 0x2f, 0x66, 0x0d, 0xbd, 0xea, 0x96, 0x38, 0x37, 0x65, 0x41, 0x1f, 0x1d,
	0xb1, 0xc7, 0x11, 0xf4, 0xd9, 0x1a, 0xff, 0xae, 0x6b, 0x11, 0x8d, 0xa3, 0xc9, 0x69, 0x91, 0x2c,
	0xe3, 0x43, 0x8d, 0x03, 0x88, 0xe7, 0xf4, 0x25, 0x8e, 0xc3, 0xe5, 0xf2, 0x28, 0x73, 0x18, 0x6e,
	0x33, 0xd8, 0x9a, 0x05, 0x13, 0x0e, 0x21, 0x61, 0xaf, 0x7c, 0xc7, 0x81, 0x71, 0x52, 0xac, 0x13,
	0x0a, 0xe8, 0xb7, 0xc4, 0xac, 0x66, 0xb4, 0xe6, 0x6c, 0xa2, 0x7c, 0x83, 0xd1, 0x73, 0xd7, 0x78,
	0x6d, 0x0f, 0x31, 0xc2, 0x0b, 0xe8, 0x35, 0xba, 0xd5, 0x5e, 0xc4, 0xe3, 0x68, 0xd2, 0x2b, 0x56,
	0x41, 0x3e, 0x81, 0xf8, 0xcb, 0xfe, 0xaf, 0xe9, 0xed, 0x77, 0x04, 0x90, 0x9b, 0x72, 0x4a, 0xee,
	0x53, 0x57, 0x84, 0x8f, 0x70, 0xfe, 0x7b, 0x04, 0x4c, 0x33, 0x76, 0x55, 0xb6, 0x73, 0xdd, 0xf4,
	0x6a, 0x67, 0xb7, 0x72, 0x91, 0x47, 0xf8, 0x02, 0x83, 0x6d, 0x53, 0xbc, 0x0e, 0x4f, 0xf6, 0x8c,
	0x93, 0xde, 0xec, 0x69, 0x37, 0xc8, 0x32, 0x09, 0x9f, 0x7e, 0xf7, 0x13, 0x00, 0x00, 0xff, 0xff,
	0x4f, 0x1c, 0x9a, 0xfe, 0x03, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	SingleTimesJob(ctx context.Context, in *SingleTimesJobRequest, opts ...grpc.CallOption) (*SingleTimesJobResponse, error)
	MultipleTimesJob(ctx context.Context, in *MultipleTimesJobRequest, opts ...grpc.CallOption) (*MultipleTimesJobResponse, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) SingleTimesJob(ctx context.Context, in *SingleTimesJobRequest, opts ...grpc.CallOption) (*SingleTimesJobResponse, error) {
	out := new(SingleTimesJobResponse)
	err := c.cc.Invoke(ctx, "/src.JobService/SingleTimesJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) MultipleTimesJob(ctx context.Context, in *MultipleTimesJobRequest, opts ...grpc.CallOption) (*MultipleTimesJobResponse, error) {
	out := new(MultipleTimesJobResponse)
	err := c.cc.Invoke(ctx, "/src.JobService/MultipleTimesJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	SingleTimesJob(context.Context, *SingleTimesJobRequest) (*SingleTimesJobResponse, error)
	MultipleTimesJob(context.Context, *MultipleTimesJobRequest) (*MultipleTimesJobResponse, error)
}

// UnimplementedJobServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJobServiceServer struct {
}

func (*UnimplementedJobServiceServer) SingleTimesJob(ctx context.Context, req *SingleTimesJobRequest) (*SingleTimesJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SingleTimesJob not implemented")
}
func (*UnimplementedJobServiceServer) MultipleTimesJob(ctx context.Context, req *MultipleTimesJobRequest) (*MultipleTimesJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultipleTimesJob not implemented")
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_SingleTimesJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleTimesJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).SingleTimesJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/src.JobService/SingleTimesJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).SingleTimesJob(ctx, req.(*SingleTimesJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_MultipleTimesJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultipleTimesJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).MultipleTimesJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/src.JobService/MultipleTimesJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).MultipleTimesJob(ctx, req.(*MultipleTimesJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "src.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SingleTimesJob",
			Handler:    _JobService_SingleTimesJob_Handler,
		},
		{
			MethodName: "MultipleTimesJob",
			Handler:    _JobService_MultipleTimesJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "karad.proto",
}
